<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageListTradeTick.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageListTradeTick.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAS
        DAAAAk1TRnQBSQFMAgEBAwEAAQQBAAEEAQABFgEAARYBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFY
        AwABFgMAAQEBAAEgBQABQAEe/wB7AAMCAQEDDAEOAxcBHgMYAR8DGAEfAxgBHwMYAR8DGAEfAxgBHwMY
        AR8DGAEfAxgBHwMYAR8DGAEfAxgBHwMYAR8DGAEfAxgBHwMVARsEB4AABAUDGAEfAxQBGgQEfAADAgEB
        AyIBLwNNAZIDWAGyA1cBtANXAbQDVwG0A1cBtANXAbQDVwG0A1cBtANXAbQDVwG0A1cBtANXAbQDVwG0
        A1cBtANXAbQDWAGyA04BlAMiAS98AAMHAQgDQwFzA1kBuANIAYIDGAEffAAEBgFQAk8BlQFgAjMB+wNB
        Af0DQQH9A0EB/QNBAf0DQQH9A0EB/QNBAf0DQQH9A0EB/QNBAf0DQQH9A0EB/QNBAf0DQQH9A0EB/QNB
        Af0DYQHbAzABSXwAAzABSgFoAlwB7wFeAkEB/QNhAdYDPAFiAwsBDXgABAYBSgJJAYYBgQG3AYEB/wGB
        AbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/AYEBsgGB
        Af8BgQGyAYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGB
        AbwBgQH/A14ByQMZASF4AAMSARYDWgG8AoEB+AH/AoEC/wF/AkIB+gNVAasDIQEuAwMBAnQAAwIBAQMg
        ASwBZAJhAdYBgQGyAYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGy
        AYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/
        AYEBsgGBAf8BbAJdAfIDQwFzBAN0AAQDA0ECcAJTAfcCgQL/AoEC/wKBAewB/wFkAmMB5ANFAXgDEgEW
        eAADCgELA0ABbQE/AiwB/AGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGy
        AYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/
        AoABbwH+A1YBsAMXAR54AAMhAS4BYAJcAdMCgQL/AoEC/wKBAv8CgQL/AXoCQgH6A1sBvwMsAUIEBHQA
        AwMBAgMYAR8DWAG1AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/
        AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/AYEBswGBAf8BaAJh
        AeMDMgFNBAN0AAQGAU4CTQGSAU4CQgH6AoEC/wKBAv8CgQL/AoEC/wKBAfIB/wFeAlwB7wNLAYoDFgEc
        eAAEBgMzAU8BaAJcAe8BgQGyAYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/AYEBsgGB
        Af8BgQGyAYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/AX8CTAH4A08BlQMQARN4AAMx
        AUsBZAJjAeQCgQL/AoEC/wKBAv8CgQL/AoEC/wKBAv8DgAH+A14BzwM5AV0DCgEMeAADDQEQAVICUQGb
        AYEBtQGBAf8BgQGyAYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGy
        AYEB/wGBAbIBgQH/AYEBsgGBAf8BgQG+AYEB/wNiAdQDHwEqeAADDAEOA1gBsgKBAf0B/wKBAv8CgQL/
        AoEC/wKBAv8CgQL/AoEC/wKBAf0B/wFsAl0B8gNTAaQDHwEqfAADIQEuAWoCYwHhAYEBsgGBAf8BgQGy
        AYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/
        AX8CTAH4A0MBdAQGeAADOQFdAX8CTAH4AoEC/wKBAv8CgQL/AoEC/wKBAv8CgQL/AoEC/wKBAv8CgQHu
        Af8DYAHgAz4BZwMKAQx4AAQGA0MBdgFRAkEB/QGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/
        AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/AoABcAH+A1wBwAMaASJ4AAMUARoBYgJeAc8CgQL/AoEC/wKB
        Av8CgQL/AoEC/wKBAv8CgQL/AoEC/wKBAv8CgQL/AWsCRgH5A1sBvQMqAT4EBXgAAxkBIAFgAlwByAGB
        AbUBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbYBgQH/AWsCYgHp
        AzUBU3gAAwgBCQNJAYQDQQH9AoEC/wKBAv8CgQL/AoEC/wKBAv8CgQL/AoEC/wKBAv8CgQL/AoEC/wKB
        Av8DYQHrA0kBhgMUARp4AAQFAzIBTQFhAlgB8wGBAbIBgQH/AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/
        AYEBsgGBAf8BZgJBAf0DUgGgAxABE3gAAygBOQNlAecCgQL/AoEC/wKBAv8CgQL/AoEC/wKBAv8CgQL/
        AoEC/wKBAv8CgQL/AoEC/wKBAv8BgAFoAYAB/gNcAcgDNAFSAwkBCngAAxABFAFSAlABmgGBAbgBgQH/
        AYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/AYEBuAGBAf8BYgJeAdcDKgE+AwIBAXQAAwwBDgFYAlYBrQNB
        Af0CgQL/AoEC/wKBAv8CgQL/AoEC/wKBAv8CgQL/AoEC/wKBAv8CgQL/AoEC/wKBAv8CgQH7Af8BZAJM
        AfYDUgGgAx4BKAMCAQF0AAMDAQIDKgE9AWQCYwHkAYEBsgGBAf8BgQGyAYEB/wGBAbIBgQH/AXACUwH3
        A0kBhAQFdAADAgEBAzkBXAFgAl0B8gKBAv8CgQL/AoEC/wKBAv8CgQL/AoEC/wKBAv8CgQL/AoEC/wKB
        Av8CgQL/AoEC/wKBAv8CgQL/AoEB2wH/A2EB3gM7AWADCgEMeAADCQEKA0QBdwKAAVMB/gGBAbIBgQH/
        AYEBtQGBAf8DWwG/AxwBJXgAAw4BEQFaAlgBugKBAv8CgQL/AoEC/wKBAv8CgQL/AoEC/wKBAv8CgQL/
        AoEC/wKBAv8CgQL/AoEC/wKBAv8CgQL/AoEC/wKBAv8BfwJMAfgDUwGmAxQBGXwAAyMBMQFfAlwBxgGB
        AbIBgQH/AWkCYAHoAzgBWgQDeAADIQEtA2IB1AKBAv8CgQL/AoEC/wKBAv8CgQL/AoEC/wKBAv8CgQL/
        AoEC/wKBAv8CgQL/AoEC/wKBAv8CgQL/AoEC/wKBAv8BawJGAfkDUgGfAxEBFXwAAwcBCAMyAU0DUwGh
        AzwBZAMHAQh8AAMPARIDPQFlA08BlgNPAZYDTwGWA08BlgNPAZYDTwGWA08BlgNPAZYDTwGWA08BlgNP
        AZYDTwGWA08BlgNPAZYDTwGWA08BlgFKAkkBhgMiAS8DAwECgAAEBQMKAQwEBYQASAYDAgEB/wD/AP8A
        HwABQgFNAT4HAAE+AwABKAMAAVgDAAEWAwABAQEAAQEFAAEIAQEWAAP/AQAI/wHAAwABwAEAAQMD/wH8
        AT8BwAMAAYABAAEDA/8B+AE/AcADAAGAAQABAwP/AfgBHwHAAwABgAEAAQMD/wHwAQ8BwAMAAYABAAED
        A/8B4AEPAcADAAHAAQABBwP/AeABBwHAAwABwAEAAQcD/wHAAQcBwAMAAeABAAEPA/8BwAEDAcADAAHw
        AQABHwP/AYABAwHAAwAB+AEAAR8D/wGAAQEBwAMAAfgBAAE/A/8CAAHAAwAB/AEAAX8C/wH+AgABwAMA
        AfwBAAF/Av8B/gIAAUADAAH+AQABfwL/AfwGAAH+AQAD/wH4BgAB/wEBA/8B+AYAAf8BgQP/AfgGAAH/
        AYMD/wH4BgAB/wHHA/8B/AIAAUADAAj/AcADAAj/AcADAAs=
</value>
  </data>
</root>